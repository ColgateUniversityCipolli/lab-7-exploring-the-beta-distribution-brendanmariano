select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
select(-is.na(pull(data1,`2022`)))
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(-is.na(pull(data1,`2022`)))
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(is.na(pull(data1,`2022`)))
view(data)
#################
#Method of Moments
#################
print(mean(pull(data1, `2022`)))
view(pull(data,`2022`))
mom.beta = function(data)
{
mom.mean = mean(pull(data1,`2022`))
mom.var = var(pull(data1, `2022`))
}
mom.mean
mom.var
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(is.na(pull(data1,`2022`)))
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(is.na(pull(data1,`2022`)))
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(is.na(pull(data1,`2022`)))
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(-is.na(`2022`))
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(!is.na(`2022`))
view(data1)
#################
#Method of Moments
#################
print(mean(pull(data1, `2022`)))
view(pull(data,`2022`))
mom.beta = function(data)
{
mom.mean = mean(pull(data1,`2022`))
mom.mean.squared = var(pull(data1, `2022`))
}
mom.mean
mom.var
################################################################################
# LECTURE 15 R CODE
# CIPOLLI
# MATH 240 - SPRING 2025
################################################################################
library(tidyverse)
library(patchwork)
library(nleqslv)
####################################
# Exponential
####################################
dat.tumor <- read_csv(file = "SEER.csv") # variable: `Tumor Size`
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(!is.na(`2022`))
view(data1)
#################
#Method of Moments
#################
print(mean(pull(data1, `2022`)))
view(pull(data,`2022`))
mom.beta = function(data, par)
{
alpha = par[1]
beta = par[2]
eq1 = alpha/(alpha + beta)
eq2 = ((alpha + 1)*alpha)/((alpha + beta + 1)(alpha + beta))
mom.mean = mean(pull(data1,`2022`))
mom.mean.squared = var(pull(data1, `2022`))
return(c(eq1 - mom.mean, eq2 - mom.mean.squared))
}
measure.of.moments = nleqslv(x = c(1,1),
fn = mom.beta,
pull(data,`2022`))
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(!is.na(`2022`))
view(data1)
#################
#Method of Moments
#################
print(mean(pull(data1, `2022`)))
view(pull(data,`2022`))
mom.beta = function(data, par)
{
alpha = par[1]
beta = par[2]
eq1 = alpha/(alpha + beta)
eq2 = ((alpha + 1)*alpha)/((alpha + beta + 1)(alpha + beta))
mom.mean = mean(pull(data1,`2022`))
mom.mean.squared = var(pull(data1, `2022`))
return(c(eq1 - mom.mean, eq2 - mom.mean.squared))
}
measure.of.moments = nleqslv(x = c(1,1),
fn = mom.beta,
data$`2022`)
install.packages(nleqslv)
install.packages("nleqslv")
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(!is.na(`2022`))
view(data1)
#################
#Method of Moments
#################
print(mean(pull(data1, `2022`)))
view(pull(data,`2022`))
mom.beta = function(data, par)
{
alpha = par[1]
beta = par[2]
eq1 = alpha/(alpha + beta)
eq2 = ((alpha + 1)*alpha)/((alpha + beta + 1)(alpha + beta))
mom.mean = mean(pull(data1,`2022`))
mom.mean.squared = var(pull(data1, `2022`))
return(c(eq1 - mom.mean, eq2 - mom.mean.squared))
}
measure.of.moments = nleqslv(x = c(1,1),
fn = mom.beta,
data = data$`2022`)
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(!is.na(`2022`))
view(data1)
#################
#Method of Moments
#################
print(mean(pull(data1, `2022`)))
view(pull(data,`2022`))
mom.beta = function(data, par)
{
alpha = par[1]
beta = par[2]
eq1 = alpha/(alpha + beta)
eq2 = ((alpha + 1)*alpha)/((alpha + beta + 1)*(alpha + beta))
mom.mean = mean(pull(data1,`2022`))
mom.mean.squared = var(pull(data1, `2022`))
return(c(eq1 - mom.mean, eq2 - mom.mean.squared))
}
measure.of.moments = nleqslv(x = c(1,1),
fn = mom.beta,
data = data$`2022`)
alpha = measure.of.moments$x[1]
beta = measure.ofmoments$x[2]
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(!is.na(`2022`))
view(data1)
#################
#Method of Moments
#################
print(mean(pull(data1, `2022`)))
view(pull(data,`2022`))
mom.beta = function(data, par)
{
alpha = par[1]
beta = par[2]
eq1 = alpha/(alpha + beta)
eq2 = ((alpha + 1)*alpha)/((alpha + beta + 1)*(alpha + beta))
mom.mean = mean(pull(data1,`2022`))
mom.mean.squared = var(pull(data1, `2022`))
return(c(eq1 - mom.mean, eq2 - mom.mean.squared))
}
measure.of.moments = nleqslv(x = c(1,1),
fn = mom.beta,
data = data$`2022`)
alpha = measure.of.moments$x[1]
beta = measure.of.moments$x[2]
mom.mean
mom.var
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(!is.na(`2022`))
view(data1)
#################
#Method of Moments
#################
print(mean(pull(data1, `2022`)))
view(pull(data,`2022`))
mom.beta = function(data, par)
{
alpha = par[1]
beta = par[2]
eq1 = alpha/(alpha + beta)
eq2 = ((alpha + 1)*alpha)/((alpha + beta + 1)*(alpha + beta))
mom.mean = mean(pull(data1,`2022`))
mom.mean.squared = var(pull(data1, `2022`))
return(c(eq1 - mom.mean, eq2 - mom.mean.squared))
}
measure.of.moments = nleqslv(x = c(1,1),
fn = mom.beta,
data = data$`2022`)
(alpha = measure.of.moments$x[1])
beta = measure.of.moments$x[2]
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(!is.na(`2022`))
view(data1)
#################
#Method of Moments
#################
print(mean(pull(data1, `2022`)))
view(pull(data,`2022`))
mom.beta = function(data, par)
{
alpha = par[1]
beta = par[2]
eq1 = alpha/(alpha + beta)
eq2 = ((alpha + 1)*alpha)/((alpha + beta + 1)*(alpha + beta))
mom.mean = mean(pull(data1,`2022`))
mom.mean.squared = var(pull(data1, `2022`))
return(c(eq1 - mom.mean, eq2 - mom.mean.squared))
}
measure.of.moments = nleqslv(x = c(1,1),
fn = mom.beta,
data = data$`2022`)
(alpha = measure.of.moments$x[1])
(beta = measure.of.moments$x[2])
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(!is.na(`2022`))
view(data1)
#################
#Method of Moments
#################
print(mean(pull(data1, `2022`)))
view(pull(data,`2022`))
mom.beta = function(data, par)
{
alpha = par[1]
beta = par[2]
eq1 = alpha/(alpha + beta)
eq2 = ((alpha + 1)*alpha)/((alpha + beta + 1)*(alpha + beta))
mom.mean = mean(pull(data1,`2022`))
mom.mean.squared = mom.mean^2
return(c(eq1 - mom.mean, eq2 - mom.mean.squared))
}
measure.of.moments = nleqslv(x = c(1,1),
fn = mom.beta,
data = data$`2022`)
(alpha = measure.of.moments$x[1])
(beta = measure.of.moments$x[2])
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(!is.na(`2022`))
view(data1)
#################
#Method of Moments
#################
print(mean(pull(data1, `2022`)))
view(pull(data,`2022`))
mom.beta = function(data, par)
{
alpha = par[1]
beta = par[2]
eq1 = alpha/(alpha + beta)
eq2 = ((alpha + 1)*alpha)/((alpha + beta + 1)*(alpha + beta))
mom.mean = mean(pull(data1,`2022`))
mom.mean.squared = mom.mean^2
return(c(eq1 - mom.mean, eq2 - mom.mean.squared))
}
measure.of.moments = nleqslv(x = c(1,1),
fn = mom.beta,
data = data$`2022`)
(alpha = measure.of.moments$x[1])
(beta = measure.of.moments$x[2])
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(!is.na(`2022`))
view(data1)
#################
#Method of Moments
#################
print(mean(pull(data1, `2022`)))
view(pull(data,`2022`))
(mom.mean = mean(pull(data1,`2022`)))
mom.mean.squared = mom.mean^2
mom.beta = function(data, par)
{
alpha = par[1]
beta = par[2]
eq1 = alpha/(alpha + beta)
eq2 = ((alpha + 1)*alpha)/((alpha + beta + 1)*(alpha + beta))
return(c(eq1 - mom.mean, eq2 - mom.mean.squared))
}
measure.of.moments = nleqslv(x = c(1,1),
fn = mom.beta,
data = data$`2022`)
(alpha = measure.of.moments$x[1])
(beta = measure.of.moments$x[2])
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(!is.na(`2022`))
view(data1)
#################
#Method of Moments
#################
view(pull(data,`2022`))
(mom.mean = mean(pull(data1,`2022`)))
(mom.mean.squared = mom.mean^2)
mom.beta = function(data, par)
{
alpha = par[1]
beta = par[2]
eq1 = alpha/(alpha + beta)
eq2 = ((alpha + 1)*alpha)/((alpha + beta + 1)*(alpha + beta))
return(c(eq1 - mom.mean, eq2 - mom.mean.squared))
}
measure.of.moments = nleqslv(x = c(1,1),
fn = mom.beta,
data = data$`2022`)
(alpha = measure.of.moments$x[1])
(beta = measure.of.moments$x[2])
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(!is.na(`2022`))
view(data1)
#################
#Method of Moments
#################
view(pull(data,`2022`))
(mom.mean = mean(pull(data1,`2022`)))
(mom.mean.squared = mom.mean^2)
mom.beta = function(data, par)
{
alpha = par[1]
beta = par[2]
eq1 = alpha/(alpha + beta)
eq2 = ((alpha + 1)*alpha)/((alpha + beta + 1)*(alpha + beta))
return(c(eq1 - mom.mean, eq2 - mom.mean.squared))
}
(measure.of.moments = nleqslv(x = c(1,1),
fn = mom.beta,
data = data$`2022`))
(alpha = measure.of.moments$x[1])
(beta = measure.of.moments$x[2])
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(!is.na(`2022`))
view(data1)
#################
#Method of Moments
#################
view(pull(data,`2022`))
mom.mean = mean(pull(data1,`2022`))
mom.mean.squared = mean(pull(data1,`2022`)^2)
mom.beta = function(data, par)
{
alpha = par[1]
beta = par[2]
eq1 = alpha/(alpha + beta)
eq2 = ((alpha + 1)*alpha)/((alpha + beta + 1)*(alpha + beta))
return(c(eq1 - mom.mean, eq2 - mom.mean.squared))
}
(measure.of.moments = nleqslv(x = c(1,1),
fn = mom.beta,
data = data$`2022`))
(alpha = measure.of.moments$x[1])
(beta = measure.of.moments$x[2])
#################
#
#################
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(!is.na(`2022`))
view(data1)
#################
#Method of Moments
#################
view(pull(data,`2022`))
mom.mean = mean(pull(data1,`2022`))
mom.mean.squared = mean(pull(data1,`2022`)^2)
mom.beta = function(data, par)
{
alpha = par[1]
beta = par[2]
eq1 = alpha/(alpha + beta)
eq2 = ((alpha + 1)*alpha)/((alpha + beta + 1)*(alpha + beta))
return(c(eq1 - mom.mean, eq2 - mom.mean.squared))
}
(measure.of.moments = nleqslv(x = c(1,1),
fn = mom.beta,
data = data$`2022`))
(alpha = measure.of.moments$x[1])
(beta = measure.of.moments$x[2])
#################
#
#################
library(tidyverse)
library(stringr)
library(nleqslv)
data1 = read_csv("wb_API/Metadata3.csv") |>
select(c("Country Name", "Country Code", "Indicator Name", "Indicator Code", "2022")) |>
mutate(`2022` = `2022`/1000)  |>
filter(!is.na(`2022`))
view(data1)
#################
#Method of Moments
#################
view(pull(data,`2022`))
mom.mean = mean(pull(data1,`2022`))
mom.mean.squared = mean(pull(data1,`2022`)^2)
mom.beta = function(data, par)
{
alpha = par[1]
beta = par[2]
eq1 = alpha/(alpha + beta)
eq2 = ((alpha + 1)*alpha)/((alpha + beta + 1)*(alpha + beta))
return(c(eq1 - mom.mean, eq2 - mom.mean.squared))
}
(measure.of.moments = nleqslv(x = c(1,1),
fn = mom.beta,
data = data$`2022`))
(alpha = measure.of.moments$x[1])
(beta = measure.of.moments$x[2])
#################
#
#################
